
from typing import Callable, List

from app.utils.console import console, print_success


class DataPipeline:
	"""–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö"""

	def __init__(self, processor: Callable, writer: Callable, batch_size: int = 100):
		self.processor = processor
		self.writer = writer
		self.batch_size = batch_size

	def run(self, data: List, description: str = "–û–±—Ä–∞–±–æ—Ç–∫–∞"):
		"""–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
		console.print(f"üîÑ {description}: {len(data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤", style="bold")

		total = len(data)
		for i in range(0, total, self.batch_size):
			batch = data[i:i + self.batch_size]
			processed = self.processor(batch)
			self.writer(processed)

			progress = min(i + len(batch), total)
			console.print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {progress}/{total}", style="dim")

		print_success(f"{description} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
